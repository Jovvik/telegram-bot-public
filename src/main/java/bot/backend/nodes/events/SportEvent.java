package bot.backend.nodes.events;

import bot.backend.nodes.events.utils.ClassField;
import bot.backend.nodes.categories.Category;
import bot.backend.nodes.events.utils.RequiredField;
import bot.backend.nodes.location.Location;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.Setter;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

@Getter
@Setter
public class SportEvent extends ActiveEvent {

    @RequiredField
    public SportType sportType;

    public SportEvent(Location location, Category category, Time time) {
        super(location, category, time);
    }

    @AllArgsConstructor
    public enum SportType {
        FOOTBALL("Футбол"),
        BASKETBALL("Баскетбол"),
        HOCKEY("Хоккей"),
        TENNIS("Теннис");

        public static Map<String, SportType> map = new HashMap<>();

        static {
            Arrays.stream(values()).forEach(it -> map.put(it.realName, it));
        }

        private String realName;

    }


	// generated by script at 22/06/2022 22:35:59
	public static final ClassField<SportEvent, SportType> SPORT_TYPE = new ClassField<>(SportEvent::getSportType, SportEvent::setSportType, "sportType");
}
